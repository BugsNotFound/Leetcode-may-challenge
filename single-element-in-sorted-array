class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        
        int low = 0, high = nums.size()-1;
        int mid;
        
        while(1){
            mid = low + (high-low)/2;
            
            
            
            if(mid+1 <= high && nums[mid] == nums[mid+1]){
                if((high-mid+1)%2 == 0){
                    high = mid-1;
                }
                else if((high-mid+1)%2 == 1){
                    low = mid;
                }
            }
            else if(mid-1 >= low && nums[mid] == nums[mid-1]){
                if((mid-low+1)%2 == 0){
                    low = mid+1;
                }
                else if((mid-low+1)%2 == 1){
                    high = mid;
                }
            }else{
                return nums[mid];
            }
        
        }
        
        return INT_MIN;
    }
};

